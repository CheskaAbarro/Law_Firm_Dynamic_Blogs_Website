@model AbarroLaw.Web.Models.ViewModels.EditPracticeRequest

@{
    ViewBag.ShowFooter = false;
    ViewBag.ShowMessage = false;
}

<style>
    body {
        overflow-x: hidden;
    }

    .flex-container {
        position: relative;
        display: flex;
        align-items: center;
        justify-content: center;
        height: 35vh; /* Adjust as necessary */
        text-align: center;
    }

    .bg-img {
        height: 35vh;
        width: 100vw;
        object-fit: cover;
        filter: brightness(0.7);
        position: absolute;
        top: 0;
        left: 0;
        z-index: -1;
        background-color: #0A3232;
    }

    .landing-title {
        font-family: Poppins;
        color: white;
        letter-spacing: 0.2em;
        line-height: 1.5em;
        text-align: center;
        font-weight: bold;
    }

    .desc-area {
        height: 200px;
        resize: none;
    }

    .container {
        font-family: Poppins;
    }

</style>


@* Landing ------------------------------------------------------------------- *@
<div class="flex-container mt-0 pt-0">
    <div class="bg-img"></div>
    <div class="container d-flex flex-column align-items-center content-wrapper">
        <h1 class="landing-title mt-5 pt-5">ADMIN - Edit Practice</h1>
    </div>
</div>


<div class="container py-5">
    @* @if (Model != null)
    { *@
        <form method="post">
            @* ID *@
            <div class="container row mb-3">
                <div class="form-group">
                    <label class="form-label">ID</label>
                    <input type="text" class="form-control" id="id" asp-for="Id" readonly />
                </div>
            </div>

            @* Practice Name *@
            <div class="container row mb-3">
                <div class="form-group">
                    <label class="form-label">Enter practice name:</label>
                    <input type="text" class="form-control" id="practiceName" asp-for="PracticeName" />
                    <span asp-validation-for="PracticeName" class="text-danger"></span>
                </div>
            </div>

            @* Description *@
            <div class="container row mb-0">
                <div class="form-group">
                    <label class="form-label">Enter the practice description:</label>
                <textarea class="form-control col-md-8 col-sm-12 desc-area" id="practiceDesc" asp-for="PracticeDescription" oninput="limitTextArea(this, 200)"></textarea>
                <span asp-validation-for="PracticeDescription" class="text-danger"></span>
                    <p id="charLimitIndicator">Remaining characters: <span id="remainingChars">200</span></p>
                </div>
            </div>

            @* Practice Image Upload *@
            <div class="container row mb-3">
                <div class="form-group">
                    <label>Practice area image upload:</label>
                    <div class="input-group">
                        <input type="file" class="form-control" id="practiceImgUpload">
                        <input type="hidden" id="practiceImageFileName" asp-for="PracticeImage" />
                    </div>

                    <span asp-validation-for="PracticeImage" class="text-danger"></span>
                    @if (Model.PracticeImageURL != null)
                    {
                        <img src="@Url.Content("~/" + Model.PracticeImageURL)" id="practiceImageDisplay" style="display: block; width: 20vh;" />
                    }
                    else
                    {
                        <img src="" id="practiceImageDisplay" style="display: none; width: 20vh;" />
                    }
                </div>
            </div>

            @* Practice Image URL *@
            <div class="container row mb-3">
                <div class="form-group">
                    <label>Image upload URL:</label>
                    <input type="text" class="form-control" id="practiceImgUploadURL" readonly asp-for="PracticeImageURL" />
                </div>
            </div>

            @* Visible Checkbox *@
            <div class="container row mb-3">
                <div class="form-group">
                    <div class="form-check">
                        <label class="form-check-label" for="flexCheckDefault">
                            Visible?
                        </label>
                        <input class="form-check-input" type="checkbox" id="staticCheck" asp-for="Visible">
                    </div>
                </div>
            </div>

            @* Buttons *@
            <div class="container row">
                <div class="col-auto ms-auto">
                    @* Delete Button *@
                    <button type="submit" class="btn btn-danger" asp-controller="AdminPractice" asp-action="DeletePractice" id="deleteForm" onclick="return confirm('Are you sure to delete practice?')">
                        Delete
                    </button>

                    @* Edit Button *@
                    <button type="submit" class="btn btn-success" asp-controller="AdminPractice" asp-action="EditPractice" id="saveForm" onclick="return confirm('Save changes made to practice?')">
                        Save Changes
                    </button>

                </div>
            </div>

        </form>
    @* }
    else
    {
        <h3>Practice ID does not exist!</h3>
    } *@

</div>


<script>

    // Character Limit on Desc
    var charLimitIndicator = document.getElementById('charLimitIndicator');

    function updateCharacterCount(element, remainingChars) {
        var currentChars = element.value.length;
        var remaining = remainingChars - currentChars;

        charLimitIndicator.textContent = 'Remaining characters: ' + remaining;
        charLimitIndicator.style.color = remaining >= 0 ? 'black' : 'red';
    }

    function limitTextArea(element, maxChars) {
        if (element.value.length > maxChars) {
            element.value = element.value.slice(0, maxChars);
            element.blur();

            charLimitIndicator.textContent = 'Maximum character limit reached.';
            charLimitIndicator.style.color = 'red';
        } else {
            updateCharacterCount(element, maxChars);
        }
    }

    document.addEventListener('DOMContentLoaded', function () {
        var textarea = document.getElementById('practiceDesc');
        var maxChars = 200; // Your maximum character limit

        limitTextArea(textarea, maxChars);
    });


    //Image upload
    const practiceImgUploadElement = document.getElementById('practiceImgUpload');
    const practiceImageFileNameElement = document.getElementById('practiceImageFileName');
    const practiceImgUploadURLElement = document.getElementById('practiceImgUploadURL');
    const practiceImageDisplayElement = document.getElementById('practiceImageDisplay');

    async function uploadPracticeImage(e) {
        console.log(e.target.files[0]);

        let data = new FormData();
        data.append('file', e.target.files[0]);

        await fetch('/api/images/upload-image', {
            method: 'POST',
            headers: {
                'Accept': '*/*',
            },
            body: data
        }).then(response => response.json())
            .then(result => {
                //checking the link in console
                console.log(result);

                //Adjust the URL to remove the controller name
                let imageUrl = result.link;
                let currentUrl = window.location.href;
                let controllerNameIndex = currentUrl.indexOf("AdminPractice");

                if (controllerNameIndex !== -1) {
                    //Remove controller name if it exist
                    let baseUrl = currentUrl.substring(0, controllerNameIndex);
                    imageUrl = baseUrl + imageUrl;
                }

                //for getting only the file name
                const fileName = practiceImgUploadElement.files[0].name;

                practiceImgUploadURLElement.value = result.link
                practiceImageFileNameElement.value = fileName;
                practiceImageDisplayElement.src = imageUrl;
                practiceImageDisplayElement.style.display = 'block';


                //Direct link without removing the controller name
                // practiceImgUploadURLElement.value = result.link;
                // practiceImageDisplayElement.src = result.link;
                // practiceImageDisplayElement.style.display = 'block';
            });
    }
    practiceImgUploadElement.addEventListener('change', uploadPracticeImage);

</script>